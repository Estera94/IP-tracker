{"version":3,"sources":["app.js"],"names":["iconImg","L","icon","iconUrl","iconSize","iconAnchor","mymap","map","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","addTo","getApiUrl","ipAddress","fetch","response","json","data","latLongInput","marker","input","document","querySelector","value","latitude","location","lat","longitude","lng","setLatLng","displayData","source","innerHTML","template","Handlebars","compile","temp","mainContent","remove","target","addEventListener","e","preventDefault"],"mappings":"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","sourcesContent":["let iconImg = L.icon({\n    iconUrl: 'icon.png',\n    iconSize: [60, 75],\n    iconAnchor: [25, 16]\n});\n\nlet mymap = L.map('issMap').setView([51.505, -0.09], 3);\n\nL.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    maxZoom: 18,\n    id: 'mapbox/streets-v11',\n    tileSize: 512,\n    zoomOffset: -1,\n    accessToken: 'pk.eyJ1IjoiZXN0ZXJhMTIzIiwiYSI6ImNrcWNmNjN4ZzB2cmsydm92OXgzeHM1MHoifQ.BlWqQ0Yc4fqR4mF_p1rcgg'\n}).addTo(mymap);\n\nasync function getApiUrl(ipAddress) {\n    let response = await fetch(`https://geo.ipify.org/api/v1?apiKey=at_N7bI2kkvX3c6QIv1J3m6dgvIbJugA&ipAddress=${ipAddress}`)\n    let data = await response.json()\n    return data\n}\n\nasync function latLongInput() {\n    let marker = L.marker([0, 0], {icon: iconImg}).addTo(mymap);\n    let input = document.querySelector(\".form-control\").value;\n    let data = await getApiUrl(input)\n    let latitude =  data.location.lat\n    let longitude =  data.location.lng\n    marker.setLatLng([latitude, longitude])\n    mymap.setView([latitude, longitude], 13)\n    return data\n}\n\nasync function displayData() {\n    let data = await latLongInput()\n    const source = document.querySelector('#dataTemplate').innerHTML\n    const template = Handlebars.compile(source)\n    const temp = document.querySelector('#temp')\n    const mainContent = document.querySelector('.main-content')\n    if(temp) {\n        temp.remove()\n    } else if(mainContent){\n        mainContent.remove()\n    }\n    const target = document.querySelector('#content')\n    target.innerHTML += template(data)\n}\n\ndocument.querySelector('.submit').addEventListener('click', (e) => {\n    e.preventDefault()\n    displayData()\n})"],"file":"app.js"}